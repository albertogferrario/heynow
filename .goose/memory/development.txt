# nostr, voice-notes, heynow, react, vite
heynow project - a nostr voice note application:

## key features:
- users can record and share voice notes on the nostr network
- voice notes appear as floating orbs on a black background
- automatic account generation with cosmic-themed names
- no login required - uses local storage for user persistence
- voice notes use kind 1069 events with audio urls
- audio files uploaded to blossom servers

## tech stack:
- react 18.x with typescript
- vite for build tooling
- tailwindcss for styling
- shadcn/ui components
- nostrify for nostr protocol
- tanstack query for data fetching
- nostr-tools for crypto operations

## important commands:
- npm run ci - typecheck and build (use after modifications)
- npm run dev - development server (never run this)
- npm run build - production build

## project structure:
- /src/components/ - ui components
- /src/hooks/ - custom react hooks
- /src/pages/ - page components
- /src/lib/ - utilities
- autoaccount generates random cosmic names
- uses npool for relay management

# nostr, heynow, no-localstorage, ephemeral
heynow project - removed all localStorage usage:

## changes made:
- removed localStorage from useAutoAccount hook
- now generates ephemeral keypair for each session
- stores user data in memory only (sessionUser variable)
- removed localStorage from usePublishProfile hook  
- uses useRef to track if profile has been published

## behavior:
- each page refresh creates a new identity
- private keys never persisted
- all data stored on nostr network and blossom servers only
- truly ephemeral voices in the cosmos

# heynow voicenotes animation
heynow project - removed collision detection from voice note orbs:
- orbs now move continuously without stopping when hovered
- simplified edge bouncing logic with 5% padding from screen edges
- removed position tracking between components
- removed collision detection between orbs
- cleaner code with fewer dependencies

# heynow voicenotes animation edge-detection
heynow project - improved edge avoidance for orbs:
- implemented soft boundary at 15% from edge where orbs start turning away
- hard boundary at 5% from edge as absolute limit
- gradual turn force applied when approaching edges (prevents sudden direction changes)
- orbs now smoothly avoid edges before hitting them
- added speed limiting to prevent erratic movement
- turn force is proportional to distance from edge

# heynow voicenotes animation speed
heynow project - increased orb movement speed:
- base speed increased 3x (from 0.01 to 0.03 max initial speed)
- wobble speed doubled for more dynamic movement
- turn force tripled (0.002 to 0.006) to handle faster speeds
- max speed limit tripled (0.015 to 0.045)
- orbs now move noticeably faster while maintaining smooth edge avoidance
- all orbs have truly random initial directions

# heynow voicenotes animation hover speed
heynow project - orbs now stop on hover and move faster:
- orbs completely stop moving when mouse hovers over them
- base speed increased to 0.04 (4x original speed)
- turn force increased to 0.008 to handle faster speeds
- max speed limit increased to 0.06
- animation loop only updates position when not hovered
- creates better interaction for listening to voice notes

# heynow voicenotes animation fade temporal
heynow project - added fade out for aging voice notes:
- orbs start fading at 9 minutes old
- linear fade from full opacity to transparent over the last minute
- opacity updates every second
- smooth transition with 1-second duration
- orbs completely disappear at 10 minutes
- maintains temporal nature of the app

# heynow voicenotes temporal time-window
heynow project - changed time window to 5 minutes:
- voice notes now only display for the last 5 minutes (was 10 minutes)
- orbs start fading at 4 minutes old (was 9 minutes)
- linear fade from full opacity to transparent over the last minute
- updated README to reflect 5-minute window
- makes the app more ephemeral and dynamic

# heynow performance optimization cleanup
heynow project - performance optimization and cleanup:
- reduced CSS from 63KB to 12KB (80% reduction)
- reduced JS from 404KB to 387KB 
- removed all unused components (auth, ui components, pages)
- reduced dependencies from 65+ to 11 essential ones
- memoized VoiceNote component for better performance
- removed react-router since it's a single page app
- simplified tailwind config and removed CSS variables
- clean, minimal codebase focused only on voice notes

